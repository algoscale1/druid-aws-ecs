# Default values for druid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

monitoring:
  enabled: false

broker:
  druid:
    service: druid/broker
    port: 8082
    broker:
      http:
        numConnections: 5
      cache:
        useCache: true
        populateCache: true
    server:
      http:
        numThreads: 25
    cache:
      type: local
      sizeInBytes: "2000000000"
    # Processing threads and buffers
    processing:
      buffer:
        sizeBytes: "536870912"
      numThreads: 7

middlemanager:
  druid:
    service: druid/middleManager
    port: 8091

overlord:
  druid:
    service: druid/overlord
    port: 8090

coordinator:
  druid:
    service: druid/coordinator
    port: 8081
    coordinator:
      startDelay: PT30S
      period: PT30S

historical:
  druid:
    service: druid/historical
    port: 8083
    server:
      http:
        numThreads: 25
      maxSize: "130000000000"
# Hardcoded value for simplicity, 1 mountpoint is enough in container
#    segmentCache:
#      locations:
#      - path: "/var/druid/segment-cache"
#        maxSize: "30000000000"
    processing:
      numThreads: 7
      buffer:
        sizeBytes: "536870912"

config:
  common:
    druid:
      extensions:
        loadList:
        - "druid-kafka-eight"
        - "druid-s3-extensions"
        - "druid-histogram"
        - "druid-datasketches"
        - "druid-lookups-cached-global"
        - "mysql-metadata-storage"
      startup:
        logging:
          logProperties: "true"
      # Zookeeper
      zk:
        service:
          host: zk.host.ip
        paths:
          base: /druid
      # Metadata storage
      metadata:
        storage:
          type: derby
          connector:
            connectURI: "jdbc:derby://metadata.store.ip:1527/var/druid/metadata.db;create=true"
            host: metadata.store.ip
            port: 1527
      # Deep storage
      storage:
        type: local
        storageDirectory: var/druid/segments
        # For S3 type
        bucket: your-bucket
        baseKey: druid/segments
      # AWS keys
      s3:
        accessKey: AAA
        secretKey: AAA
      # Indexing service logs
      indexer:
        logs:
          type: file
          directory: var/druid/indexing-logs
          # For S3
          #s3Bucket: your-bucket
          #s3Prefix: druid/indexing-logs
      # Service discovery
      selectors:
        indexing:
          serviceName: druid/overlord
        coordinator:
          serviceName: druid/coordinator
      # Monitoring
      monitoring:
        monitors:
        - "io.druid.java.util.metrics.JvmMonitor"
      emitter:
        composing:
          emitters:
          - "logging"
        logging:
          logLevel: info
      # Storage type of double columns
      indexing:
        doubleStorage: double
